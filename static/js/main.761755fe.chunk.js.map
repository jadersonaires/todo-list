{"version":3,"sources":["components/header.js","components/items.js","components/list.js","components/form.js","store/modules/tasks/reducer.js","store/modules/rootReducer.js","store/index.js","App.js","index.js"],"names":["Header","props","className","title","description","Items","task","id","type","completed","date","onToggleTaskDone","onRemoveTask","toggleTaskDoneHandler","useCallback","removeTodoHandler","key","class","onClick","List","tasksList","map","tasks","Form","getTasks","useSelector","state","list","dispatch","useDispatch","useState","setTasks","value","setValue","error","setError","useEffect","localStorage","setItem","JSON","stringify","toggleTasksDoneHandler","search","find","item","payload","removeTasksHandler","filterRemove","filter","onSubmit","e","preventDefault","trim","length","createTasks","randomString","generate","moment","format","addItemArr","style","htmlFor","name","placeholder","onChange","target","initialState","getItem","parse","combineReducers","action","store","createStore","rootReducer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.761755fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <div className=\"jumbotron mt-4 b-shadow\">\r\n                        <h1 className=\"display-4\">{ props.title }</h1>\r\n                        <p className=\"lead\">{props.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { useCallback } from 'react'\r\n\r\nconst Items = ({ task, id, type, completed, date, onToggleTaskDone, onRemoveTask }) => {\r\n\r\n    const toggleTaskDoneHandler = useCallback(() => onToggleTaskDone(id), [id, onToggleTaskDone])\r\n    const removeTodoHandler = useCallback(() => onRemoveTask(id), [id, onRemoveTask])\r\n\r\n    return (\r\n        <li key={id}\r\n            className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\r\n            <div class=\"d-flex align-items-start flex-column\">\r\n                <h6 class={`mb-1 ${completed === true ? `text-decorate-through` : ``} `}>{task}</h6>\r\n                <small>{date}</small>\r\n            </div>\r\n\r\n            <span>\r\n                <span type=\"button\"\r\n                    className=\"badge badge-danger badge-pill ml-2 mr-2\"\r\n                    onClick={removeTodoHandler}>\r\n                    Remove\r\n                </span>\r\n                <span type=\"button\"\r\n                    className={`badge ${completed === true ? `badge-success` : `badge-secondary`} badge-pill ml-2 mr-2`}\r\n                    onClick={toggleTaskDoneHandler}>\r\n                    {type}\r\n                </span>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Items","import React from 'react'\r\nimport Items from './items'\r\n\r\nconst List = ({tasksList, onToggleTaskDone, onRemoveTask }) => {\r\n    \r\n    return (\r\n        <div className=\"container mb-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <hr className=\"my-4\" />\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {tasksList.map(({id, tasks, type, completed, date }) => (\r\n                            <Items \r\n                                key={id}\r\n                                id={id}\r\n                                task={tasks}\r\n                                type={type}\r\n                                completed={completed}\r\n                                date={date}\r\n                                onToggleTaskDone={onToggleTaskDone}\r\n                                onRemoveTask={onRemoveTask}\r\n                            />                            \r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport randomString from 'randomstring'\r\n\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\n\r\nimport List from './list'\r\n\r\nconst Form = () => {\r\n\r\n    //Pega lista de tarefas do redux\r\n    let getTasks = useSelector(state => state.tasks.list)\r\n\r\n    const dispatch = useDispatch()\r\n    const [tasks, setTasks] = useState(getTasks)\r\n    const [value, setValue] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    function handleAddTasks(e) {\r\n        e.preventDefault()\r\n\r\n        if (value.trim().length > 3) {\r\n            setError('');\r\n\r\n            const createTasks = {\r\n                id: randomString.generate(8),\r\n                tasks: value,\r\n                type: 'Conclude',\r\n                completed: false,\r\n                date: moment().format('LL')\r\n            }\r\n\r\n            let addItemArr = [...tasks, createTasks]\r\n\r\n            dispatch({\r\n                type: 'CREATE',\r\n                payload: addItemArr\r\n            })\r\n\r\n            setTasks([...addItemArr])\r\n            setValue('')\r\n        } else {\r\n            setError('Please input something...');\r\n        }\r\n    }\r\n\r\n    const toggleTasksDoneHandler = useCallback(id => {\r\n        let search = tasks.find(item => item.id === id)\r\n        search.completed = true;\r\n        search.type = 'Done';\r\n\r\n        dispatch({\r\n            type: 'CONCLUDE',\r\n            payload: [...tasks]\r\n        })\r\n        setTasks([...tasks])\r\n    }, [tasks])\r\n\r\n    const removeTasksHandler = useCallback(id => {\r\n        var filterRemove = tasks.filter(item => item.id !== id)\r\n\r\n        dispatch({\r\n            type: 'REMOVE',\r\n            payload: filterRemove\r\n        })\r\n\r\n        setTasks(filterRemove)\r\n    }, [tasks])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-sm\">\r\n                <div className=\"row justify-content-end\">\r\n                    <div className=\"col-sm-7\">\r\n                        <form onSubmit={handleAddTasks} className=\"form-inline justify-content-end\" style={{'align-items': 'self-start'}}>\r\n                            <div className=\"form-group mx-md-3 w-75\">\r\n                                <label htmlFor=\"inputTasks\" className=\"sr-only\">Tasks</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"value\"\r\n                                    className=\"form-control w-100\"\r\n                                    id=\"inputTasks\"\r\n                                    placeholder=\"Tasks...\"\r\n                                    value={value}\r\n                                    onChange={e => setValue(e.target.value)} />\r\n                                    {error.length > 0 && <small className=\"text-danger\">{error}</small>}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Adicionar</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <List tasksList={tasks}\r\n                onToggleTaskDone={toggleTasksDoneHandler}\r\n                onRemoveTask={removeTasksHandler} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form","const initialState = {\r\n    list: localStorage.getItem('tasks') ? JSON.parse(localStorage.getItem('tasks')) : []\r\n}\r\n\r\nexport default function tasksList(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return { ...state, list: [...state.list, action.payload] }\r\n        case 'CONCLUDE':\r\n            return { ...state, list: [...state.list, action.payload] }\r\n        case 'REMOVE':\r\n            return { ...state, list: [...state.list, action.payload] }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport listTasks from './tasks/reducer'\r\n\r\nexport default combineReducers({\r\n    tasks: listTasks\r\n})","import { createStore } from 'redux'\r\nimport rootReducer from './modules/rootReducer'\r\n\r\nconst store = createStore(rootReducer)\r\nexport default store","import React from 'react';\nimport { Provider } from 'react-redux'\n\n//Components\nimport Header from './components/header'\nimport Form from './components/form'\n\nimport store from './store'\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header title={`Todo List`} \n\t\t\t\t\tdescription={`This task list with object of daily task record and as for the end or the user can delete and mark as finished. In this project and a list of simple tasks done with React Js.`} />\n\t\t\t\t<Form />\t\t\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import 'bootstrap/dist/css/bootstrap.css'\nimport './css/custom.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}